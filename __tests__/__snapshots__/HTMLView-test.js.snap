// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HTMLView/> can use a custom node class 1`] = `
<View>
  <Text
    selectable={false}
  >
    <Text
      selectable={false}
      style={
        Array [
          undefined,
        ]
      }
    />
  </Text>
</View>
`;

exports[`<HTMLView/> can use a custom renderer 1`] = `
<View>
  <Text>
    <Text />
  </Text>
</View>
`;

exports[`<HTMLView/> can use custom node props 1`] = `
<View>
  <Text
    selectable={false}
  >
    <Text
      selectable={false}
      style={
        Array [
          undefined,
        ]
      }
    />
  </Text>
</View>
`;

exports[`<HTMLView/> should handle additional text nodes between list items 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        1. 
      </Text>
      

    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        2. 
      </Text>
      

    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should not render extra linebreaks if configured not to 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          Object {
            "fontSize": 30,
            "fontWeight": "500",
          },
        ]
      }
    />
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text
        style={
          Array [
            undefined,
          ]
        }
      />
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should not render extra linebreaks in list items if configured not to 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render a <Text/> element 1`] = `
<View>
  <Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
        ]
      }
    />
  </Text>
</View>
`;

exports[`<HTMLView/> should render an <Image /> with set width/height 1`] = `
<View>
  <Image
    source={
      Object {
        "height": 58,
        "uri": "https://facebook.github.io/react-native/img/header_logo.png",
        "width": 66,
      }
    }
    style={
      Object {
        "backgroundColor": "transparent",
        "height": 58,
        "width": 66,
      }
    }
  />
</View>
`;

exports[`<HTMLView/> should render an <Image />, with default width/height of 1 1`] = `
<View>
  <Image
    source={
      Object {
        "height": 1,
        "uri": "https://facebook.github.io/react-native/img/header_logo.png",
        "width": 1,
      }
    }
    style={
      Object {
        "backgroundColor": "transparent",
        "height": 1,
        "width": 1,
      }
    }
  />
</View>
`;

exports[`<HTMLView/> should render inherited styles correctly 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          Object {
            "color": "blue",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "green",
            },
          ]
        }
      />
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render nested styles correctly 1`] = `
<View>
  <Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
          Object {
            "margin": 10,
          },
        ]
      }
    />
  </Text>
</View>
`;

exports[`<HTMLView/> should render ol numbers 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        1. 
      </Text>
      

    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        2. 
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render parent selected styles correctly 1`] = `
<View>
  <Text
    style={
      Array [
        Object {
          "margin": 10,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontWeight": "500",
          },
        ]
      }
    />
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
        ]
      }
    />
  </Text>
</View>
`;

exports[`<HTMLView/> should render shoddy html including headings, links, bold, italic 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 30,
              "fontWeight": "500",
            },
          ]
        }
      >
        

      </Text>
      <Text
        style={
          Array [
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontStyle": "italic",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontWeight": "500",
                },
              ]
            }
          />
        </Text>
        


      </Text>
      <Text
        style={
          Array [
            undefined,
          ]
        }
      >
        <Text
          onPress={[Function]}
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontWeight": "500",
              },
            ]
          }
        />
        


      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render text in a (nested) <Text/> element 1`] = `<View />`;

exports[`<HTMLView/> should render ul bullets 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
      

    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
    </Text>
  </Text>
</View>
`;
