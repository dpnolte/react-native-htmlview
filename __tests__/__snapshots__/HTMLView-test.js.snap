// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HTMLView/> can use a custom node class 1`] = `
<View>
  <Text
    selectable={false}
  >
    <Text
      selectable={false}
      style={
        Array [
          undefined,
        ]
      }
    />
  </Text>
</View>
`;

exports[`<HTMLView/> can use a custom renderer 1`] = `
<View>
  <Text>
    <Text />
  </Text>
</View>
`;

exports[`<HTMLView/> can use custom node props 1`] = `
<View>
  <Text
    selectable={false}
  >
    <Text
      selectable={false}
      style={
        Array [
          undefined,
        ]
      }
    />
  </Text>
</View>
`;

exports[`<HTMLView/> should handle additional text nodes between list items 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        1. 
      </Text>
      <Text>
         a 
      </Text>
      

    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        2. 
      </Text>
      <Text>
         b 
      </Text>
      

    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should not render extra linebreaks if configured not to 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          Object {
            "fontSize": 30,
            "fontWeight": "500",
          },
          Object {
            "fontSize": 30,
            "fontWeight": "500",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 30,
              "fontWeight": "500",
            },
          ]
        }
      >
        Dwayne’s only companion at night was a Labrador retriever named Sparky.
      </Text>
    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        
        Sparky could not wag his tail-because of an automobile accident many years ago, so he had no way of telling other dogs how friendly he was.
      </Text>
      <Text
        style={
          Array [
            undefined,
          ]
        }
      />
      <Text>
        
        He opened the door of the cage, something Bill couldn’t have done in a thousand years. Bill flew over to a windowsill.
        
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should not render extra linebreaks in list items if configured not to 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
      <Text>
         a 
      </Text>
    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
      <Text>
         b 
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render a <Text/> element 1`] = `
<View>
  <Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontWeight": "500",
            },
          ]
        }
      >
        &hearts nice job!
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render an <Image /> with set width/height 1`] = `
<View>
  <Image
    source={
      Object {
        "height": 58,
        "uri": "https://facebook.github.io/react-native/img/header_logo.png",
        "width": 66,
      }
    }
    style={
      Object {
        "backgroundColor": "transparent",
        "height": 58,
        "width": 66,
      }
    }
  />
</View>
`;

exports[`<HTMLView/> should render an <Image />, with default width/height of 1 1`] = `
<View>
  <Image
    source={
      Object {
        "height": 1,
        "uri": "https://facebook.github.io/react-native/img/header_logo.png",
        "width": 1,
      }
    }
    style={
      Object {
        "backgroundColor": "transparent",
        "height": 1,
        "width": 1,
      }
    }
  />
</View>
`;

exports[`<HTMLView/> should render inherited styles correctly 1`] = `
<View>
  <Text
    style={
      Array [
        Object {
          "color": "red",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "red",
          },
        ]
      }
    >
      RED
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "blue",
          },
          Object {
            "color": "red",
          },
          Object {
            "color": "blue",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "red",
            },
            Object {
              "color": "blue",
            },
          ]
        }
      >
        BLUE
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "green",
            },
            Object {
              "color": "red",
            },
            Object {
              "color": "blue",
            },
            Object {
              "color": "green",
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "red",
              },
              Object {
                "color": "blue",
              },
              Object {
                "color": "green",
              },
            ]
          }
        >
          GREEN
        </Text>
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render nested styles correctly 1`] = `
<View>
  <Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
          Object {
            "margin": 10,
          },
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "margin": 10,
            },
            Object {
              "color": "#007AFF",
              "fontWeight": "500",
            },
            Object {
              "margin": 10,
            },
          ]
        }
      >
        child selected style
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render ol numbers 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        1. 
      </Text>
      <Text>
         a 
      </Text>
      

    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        2. 
      </Text>
      <Text>
         b 
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render parent selected styles correctly 1`] = `
<View>
  <Text
    style={
      Array [
        Object {
          "margin": 10,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "margin": 10,
          },
          Object {
            "margin": 10,
          },
        ]
      }
    >
      
    
    </Text>
    <Text
      style={
        Array [
          Object {
            "fontWeight": "500",
          },
          Object {
            "margin": 10,
          },
          Object {
            "margin": 10,
          },
          Object {
            "fontWeight": "500",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "margin": 10,
            },
            Object {
              "margin": 10,
            },
            Object {
              "fontWeight": "500",
            },
          ]
        }
      >
        Test
      </Text>
    </Text>
    <Text
      style={
        Array [
          Object {
            "margin": 10,
          },
          Object {
            "margin": 10,
          },
        ]
      }
    >
      
    
    </Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
          Object {
            "margin": 10,
          },
          Object {
            "margin": 10,
          },
          Object {
            "color": "#007AFF",
            "fontWeight": "500",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "margin": 10,
            },
            Object {
              "margin": 10,
            },
            Object {
              "color": "#007AFF",
              "fontWeight": "500",
            },
          ]
        }
      >
        parent selected style
      </Text>
    </Text>
    <Text
      style={
        Array [
          Object {
            "margin": 10,
          },
          Object {
            "margin": 10,
          },
        ]
      }
    >
      
    
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render shoddy html including headings, links, bold, italic 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 30,
              "fontWeight": "500",
            },
            Object {
              "fontSize": 30,
              "fontWeight": "500",
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontSize": 30,
                "fontWeight": "500",
              },
            ]
          }
        >
          &gt; Dwayne’s only companion at night was a Labrador retriever named Sparky.
        </Text>
        

      </Text>
      <Text
        style={
          Array [
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontStyle": "italic",
              },
              Object {
                "fontStyle": "italic",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontStyle": "italic",
                },
              ]
            }
          >
            Sparky could not wag his tail-because of an automobile accident many years ago, so he had no way of telling other dogs how friendly he was.
        He opened the door of the cage, something Bill couldn’t have done in a thousand years. Bill flew over to a windowsill.
        
          </Text>
          <Text
            style={
              Array [
                Object {
                  "fontWeight": "500",
                },
                Object {
                  "fontStyle": "italic",
                },
                Object {
                  "fontWeight": "500",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontStyle": "italic",
                  },
                  Object {
                    "fontWeight": "500",
                  },
                ]
              }
            >
              The undippable flag was a beauty, and the anthem and the vacant motto might not have mattered much, if it weren’t for this: a lot of citizens were so ignored and cheated and insulted that they thought they might be in the wrong country, or even on the wrong planet, that some terrible mistake had been made.
        
            </Text>
          </Text>
        </Text>
        


      </Text>
      <Text
        style={
          Array [
            undefined,
          ]
        }
      >
        <Text>
          
          [1] 
        </Text>
        <Text
          onPress={[Function]}
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontWeight": "500",
              },
              Object {
                "color": "#007AFF",
                "fontWeight": "500",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontWeight": "500",
                },
              ]
            }
          >
            https://code.facebook.com/posts/1505962329687926/flow-a-new-...
          </Text>
        </Text>
        


      </Text>
    </Text>
  </Text>
</View>
`;

exports[`<HTMLView/> should render text in a (nested) <Text/> element 1`] = `
<View>
  <Text>
    This is some text
  </Text>
</View>
`;

exports[`<HTMLView/> should render ul bullets 1`] = `
<View>
  <Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
      <Text>
         a 
      </Text>
      

    </Text>
    <Text
      style={
        Array [
          undefined,
        ]
      }
    >
      <Text>
        • 
      </Text>
      <Text>
         b 
      </Text>
    </Text>
  </Text>
</View>
`;
